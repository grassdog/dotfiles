<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>AMApplicationBuild</key>
	<string>428</string>
	<key>AMApplicationVersion</key>
	<string>2.7</string>
	<key>AMDocumentVersion</key>
	<string>2</string>
	<key>actions</key>
	<array>
		<dict>
			<key>action</key>
			<dict>
				<key>AMAccepts</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Optional</key>
					<true/>
					<key>Types</key>
					<array>
						<string>com.apple.cocoa.string</string>
					</array>
				</dict>
				<key>AMActionVersion</key>
				<string>2.0.3</string>
				<key>AMApplication</key>
				<array>
					<string>Automator</string>
				</array>
				<key>AMParameterProperties</key>
				<dict>
					<key>COMMAND_STRING</key>
					<dict/>
					<key>CheckedForUserDefaultShell</key>
					<dict/>
					<key>inputMethod</key>
					<dict/>
					<key>shell</key>
					<dict/>
					<key>source</key>
					<dict/>
				</dict>
				<key>AMProvides</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Types</key>
					<array>
						<string>com.apple.cocoa.string</string>
					</array>
				</dict>
				<key>ActionBundlePath</key>
				<string>/System/Library/Automator/Run Shell Script.action</string>
				<key>ActionName</key>
				<string>Run Shell Script</string>
				<key>ActionParameters</key>
				<dict>
					<key>COMMAND_STRING</key>
					<string>use 5.010; use strict; use warnings; use utf8;

package Lingua::EN::Titlecase::Simple;

# ABSTRACT: John Gruber's headline capitalization script

eval "use Exporter::Tidy all =&gt; [ 'titlecase' ]" if defined caller;

our @SMALL_WORD
        = qw/ (?&lt;!q&amp;)a an and as at(?!&amp;t) but by en for if in of on or the to v[.]? via vs[.]? /;

sub titlecase {
        my @str = @_ or return;

        for ( @str ) {
                s{\A\s+}{}, s{\s+\z}{};

                $_ = lc $_ unless /[[:lower:]]/;

                state $apos = q/ (?: ['’] [[:lower:]]* )? /;
                state $small_re = join '|', @SMALL_WORD;

                s{
                        \b _*\K (?:
                                ( (?&lt;=[ ][/\\]) [[:alpha:]]+ [-_[:alpha:]/\\]+ |   # file path or
                                [-_[:alpha:]]+ [@.:] [-_[:alpha:]@.:/]+ $apos )    # URL, domain, or email
                                |
                                ( (?i) $small_re $apos )                           # or small word (case-insensitive)
                                |
                                ( [[:alpha:]] [[:lower:]'’()\[\]{}]* $apos )       # or word w/o internal caps
                                |
                                ( [[:alpha:]] [[:alpha:]'’()\[\]{}]* $apos )       # or some other word
                        ) (?= _* \b )
                }{
                        ; defined $1 ? $1         # preserve URL, domain, or email
                        : defined $2 ? lc $2      # lowercase small word
                        : defined $3 ? ucfirst $3 # capitalize lower-case word
                        : $4                      # preserve other kinds of word
                }exgo;

                # exceptions for small words: capitalize at start and end of title
                s{
                        (?: \A [[:punct:]]*        # start of title...
                        |  [:.;?!][ ]+             # or of subsentence...
                        |  [ ]['"“‘(\[][ ]*     )  # or of inserted subphrase...
                        \K
                        ( $small_re ) \b           # ... followed by small word
                }{\u\L$1}xigo;

                s{
                        \b ( $small_re )      # small word...
                        (?= [[:punct:]]* \Z   # ... at the end of the title...
                        |   ['"’”)\]] [ ] )   # ... or of an inserted subphrase?
                }{\u\L$1}xigo;
        }

        wantarray ? @str : ( @str &gt; 1 ) ? \@str : $str[0];
}

return 1 if defined caller;

eval 'use open qw( :encoding(UTF-8) :std )';
my $opt_force = @ARGV &amp;&amp; '-f' eq $ARGV[0];
shift @ARGV if $opt_force;
shift @ARGV if @ARGV &amp;&amp; '--' eq $ARGV[0];
print titlecase( $opt_force ? lc : $_ ), "\n" while readline;</string>
					<key>CheckedForUserDefaultShell</key>
					<true/>
					<key>inputMethod</key>
					<integer>0</integer>
					<key>shell</key>
					<string>/usr/bin/perl</string>
					<key>source</key>
					<string></string>
				</dict>
				<key>BundleIdentifier</key>
				<string>com.apple.RunShellScript</string>
				<key>CFBundleVersion</key>
				<string>2.0.3</string>
				<key>CanShowSelectedItemsWhenRun</key>
				<false/>
				<key>CanShowWhenRun</key>
				<true/>
				<key>Category</key>
				<array>
					<string>AMCategoryUtilities</string>
				</array>
				<key>Class Name</key>
				<string>RunShellScriptAction</string>
				<key>InputUUID</key>
				<string>483DF6BE-18DA-471A-B2DC-6356B09D1F94</string>
				<key>Keywords</key>
				<array>
					<string>Shell</string>
					<string>Script</string>
					<string>Command</string>
					<string>Run</string>
					<string>Unix</string>
				</array>
				<key>OutputUUID</key>
				<string>815C8EA0-FA45-4408-97AB-47688E893473</string>
				<key>UUID</key>
				<string>92123CCA-6DD5-42A8-8260-B8F4ADEA4455</string>
				<key>UnlocalizedApplications</key>
				<array>
					<string>Automator</string>
				</array>
				<key>arguments</key>
				<dict>
					<key>0</key>
					<dict>
						<key>default value</key>
						<integer>0</integer>
						<key>name</key>
						<string>inputMethod</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>0</string>
					</dict>
					<key>1</key>
					<dict>
						<key>default value</key>
						<string></string>
						<key>name</key>
						<string>source</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>1</string>
					</dict>
					<key>2</key>
					<dict>
						<key>default value</key>
						<false/>
						<key>name</key>
						<string>CheckedForUserDefaultShell</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>2</string>
					</dict>
					<key>3</key>
					<dict>
						<key>default value</key>
						<string></string>
						<key>name</key>
						<string>COMMAND_STRING</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>3</string>
					</dict>
					<key>4</key>
					<dict>
						<key>default value</key>
						<string>/bin/sh</string>
						<key>name</key>
						<string>shell</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>4</string>
					</dict>
				</dict>
				<key>conversionLabel</key>
				<integer>0</integer>
				<key>isViewVisible</key>
				<true/>
				<key>location</key>
				<string>309.000000:433.000000</string>
				<key>nibPath</key>
				<string>/System/Library/Automator/Run Shell Script.action/Contents/Resources/English.lproj/main.nib</string>
			</dict>
			<key>isViewVisible</key>
			<true/>
		</dict>
	</array>
	<key>connectors</key>
	<dict/>
	<key>workflowMetaData</key>
	<dict>
		<key>serviceInputTypeIdentifier</key>
		<string>com.apple.Automator.text</string>
		<key>serviceOutputTypeIdentifier</key>
		<string>com.apple.Automator.text</string>
		<key>serviceProcessesInput</key>
		<integer>0</integer>
		<key>workflowTypeIdentifier</key>
		<string>com.apple.Automator.servicesMenu</string>
	</dict>
</dict>
</plist>
